library(renv)
renv::init()
renv::init(bare=TRUE)
install.packages("tidyverse")
install.packages("here")
renv::snapshot()
install.packages("knitr")
library(knitr)
renv::snapshot()
?kable
install.packages("markdown")
renv::snapshot()
Renviron
?R
R.version
R.version$version.string
Sys.info()
Sys.info()["sysname"]
renv::snapshot()
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("empirics","code","define_globals.R"))
source(here("empirics","code","setup.R"))
source(here("empirics","code","01_setup.R"))
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("empirics","code","01_setup.R"))
?source
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("empirics","code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("empirics","code","02_dataprep.R"))
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("empirics","code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("empirics","code","02_dataprep.R"))
# Analysis - Analyse the data ----------------------------------------------------------------
source(here("tasks","code","03_analysis.R"))
load(here("empirics","output","globalvariables.Rdata"))
x = readRDS(file=here("empirics","output","foreign_born.RDS"))
x = x %>%
select(year = TIME, country, value = Value)
#Focus on four European countries
target =  c("Belgium","France","Netherlands","Germany")
x = x %>%
filter(country %in% target)
#Figure
fig_out = ggplot(data=x) +
geom_line(mapping=aes(x=year,y=value,colour=country,linetype=country)) +
theme_minimal() +
theme(panel.grid = element_blank(),axis.title.y=element_text(angle=0,vjust=0.5),legend.position="bottom") +
ylab("% of population") +
xlab("Year") +
scale_color_manual(values=colorpalette) +
scale_linetype_manual(values=linetypes)
fig_out
ggsave(filename =here("empirics","output","foreignborn.png"),plot=fig_out,width=14,height=6,units="cm")
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("empirics","code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("empirics","code","02_dataprep.R"))
# Analysis - Analyse the data ----------------------------------------------------------------
source(here("empirics","code","03_analysis.R"))
unlink("Readme_cache", recursive = TRUE)
?renv
vignette(renv)
vignette("renv")
renv::diagnostics()
?here
library(here)
?here
here("empirics")
file.path("empirics")
file.path("empirics","code")
file.path(".\empirics","code")
file.path("./empirics","code")
renv::clean()
renv::snapshot()
renv::init(bare=TRUE)
renv::snapshot()
renv::init(bare=TRUE)
renv::snapshot()
renv::init(bare=TRUE)
renv::snapshot()
# SETUP -------------------------------------------------------------------------
#Load libraries
library(tidyverse)
library(here)
library(xtable)
library(abind)
library(latex2exp)
library(ggpubr)
#Styles
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#c9bd22", "#0072B2", "#D55E00", "#CC79A7")
cbbPalette_extended <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#c9bd22", "#0072B2", "#D55E00", "#CC79A7",
"#542E71","#592237","#0A122A","#1F271B","#4C230A")
# cbbPalette_extended = c("#999999", "#C59C3F", "#CEA226" ,"#79AEAE", "#39ACC1" ,"#079F7C" ,"#64AD4A",
#                         "#B8B62D", "#428B82", "#356D85", "#B1611D" ,"#D16945", "#CC79A7")
linetypes = c("solid", "22", "42", "44", "13", "1343", "73", "2262", "12223242","F282", "F4448444", "224282F2", "F1")
shapes = c(16, 17, 15,  3,  7,  8)
#Load source code specific to this analysis
source(here("empirics","R","toolbox.R"))
# Gather results ----------------------------------------------------------
sector = c("18","22","25","28","31")
variables = c("Dexport_status_avg_binary",
"Dimport_status_avg_binary",
"DFDI_status_avg_binary")
out = lapply(sector,function(sec){
out = lapply(variables,function(var){
x = readRDS(here("empirics","tasks","dataprep","output","data_NBB_readyratio.RDS"))
x = x %>%
arrange(id,year)
if(sec!="Industry"){
x= x %>%
filter(nacerev2==sec)
}
k = case_when(
sec == "18" ~ 10,
sec == "22" ~ 6,
sec == "25" ~ 9,
sec == "28" ~ 6,
sec == "31" ~ 3,
)
# Load est results
out = loadRdata(file=here("empirics","tasks","estimation_concomitants","output",paste0("nace_",sec),"ACF_Translog_EndoLabour",paste0("out_liml_mixture_",k,".Rdata")))
L_x = x %>%
arrange(id,year) %>%
group_by(id) %>%
mutate(across(c("k","l","y"),~tlag(.x,n=1, along_with = year), .names="L_{col}")) %>%
drop_na(paste0("L_",(c("k","l","y"))))
int  = out$prod_out
L_x = L_x %>%
left_join(int,by=c("id","year"))
#First year only
group_first = !duplicated(L_x$id)
L_x = L_x[group_first,]
X_concomitants= L_x[,c("L_k","L_l","L_omega","age","nbplants_status_avg","legalform_stable_avg",
"Dexport_status_avg_binary","Dexport_status_avg",
"Dimport_status_avg_binary","Dimport_status_avg",
"DFDI_status_avg_binary", "DFDI_status_avg",
"Dproducts","nbprod8d_avg",
"Dlabortype","Demployeeeduc","sh_bluefte_avg_nona",
"sh_primfte_avg_nona","sh_secfte_avg_nona","sh_upfte_avg_nona","sh_univfte_avg_nona")]
id_matrix = matrix(1,nrow=k,ncol=1)
test = cbind.data.frame(factor(rep(1:k,each=nrow(L_x))),kronecker(id_matrix,data.matrix(X_concomitants)))
colnames(test) = c("y",colnames(X_concomitants))
test_form = as.formula( paste0("y ~ L_omega +factor(",var,",ordered=FALSE) "))
out =  nnet::multinom(test_form,
weights = c(out$posterior[,-1,drop=FALSE]),
data=test,maxit=1e4,trace=FALSE,reltol=1e-20,entropy=TRUE)
int = data.matrix(L_x)
# var = "Dexport_status_avg_binary"
int = cbind.data.frame(int[,colnames(int) != var],var =  rep(sort(unique(data.frame(data.matrix(L_x))[[var]])),each=nrow(int)))
colnames(int)[ncol(int)] = var
prediction = predict(out, newdata = int, "probs")
colnames(prediction) = c(paste0("Clust. ",1:(ncol(prediction))))
int = cbind.data.frame(int,prediction)
int = int %>%
select(id,L_omega,var,paste0("Clust. ",1:(ncol(prediction))))
int = int %>%
pivot_longer(cols=paste0("Clust. ",1:(ncol(prediction))),
names_to = "cluster",
values_to="prediction")
int[[var]] = factor(int[[var]],levels=c(0,1),labels=c("Inactive","Active"))
# xaxis = ifelse(var=="Dexport_status_avg_binary", "Prior Prob. ", "")
xaxis =  "Prior Prob. "
title = case_when(
var == "Dexport_status_avg_binary" ~ "Export",
var == "Dimport_status_avg_binary" ~ "Import",
var == "DFDI_status_avg_binary" ~ "FDI"
)
out = ggplot(int) +
geom_point(aes(x=L_omega,y=prediction,colour = factor(cluster),shape=.data[[var]])) +
theme_minimal() +
theme(panel.grid = element_blank(),axis.title.y=element_text(angle=0,vjust=0.5),legend.position="bottom",legend.title=element_blank(),
plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values=cbbPalette_extended[-1]) +
scale_shape_manual(values=c(16,5)) +
guides(colour = guide_legend(nrow = 1)) +
ggtitle(title) +
ylab(TeX(xaxis)) +
xlab(TeX("log(Initial productivity)"))
return(out)
})
fig_out = ggarrange(out[[1]],
out[[2]],
out[[3]],
nrow=3,
common.legend = TRUE,
legend="bottom")
ggsave(filename =here("empirics","tasks","summary_estimation_concomitants","output",
paste0("fig_APP_concomitants_nace",sec,"_ACF_Translog_endolabour.pdf")),plot=fig_out,width=30/1.3,height=30,units="cm",device="pdf")
})
##############################################################
# Data preparation
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(tidyverse)
library(here) #easy file referencing, root is set at project root
library(flextable) #Output tables to word
library(huxtable) # Outupt tables
#Load global variables
load(here("output","globalvariables.Rdata"))
# Data analysis ------------------------------------------------------------
# Load data
x = readRDS(file=here("output","foreign_born.RDS"))
x = x %>%
select(year = TIME, country, value = Value)
#Focus on four European countries
target =  c("Belgium","France","Netherlands","Germany")
x = x %>%
filter(country %in% target)
#Figure
fig_out = ggplot(data=x) +
geom_line(mapping=aes(x=year,y=value,colour=country,linetype=country)) +
theme_minimal() +
theme(panel.grid = element_blank(),axis.title.y=element_text(angle=0,vjust=0.5),legend.position="bottom") +
ylab("% of population") +
xlab("Year") +
scale_color_manual(values=colorpalette) +
scale_linetype_manual(values=linetypes)
fig_out
ggsave(filename =here("output","figures","foreign_born.png"),plot=fig_out,width=14,height=6,units="cm")
rm(fig_out)
#Table
x = x %>%
filter(year==2000) %>%
select(-year)
x_table = as_hux(x)
x_table[1,] = c("Country","Percentage")
x_table = x_table %>%
set_align(row = 1, col = everywhere, "center") %>%
set_bold(row = 1,col = everywhere) %>%
set_bottom_border(row = 1, col = everywhere) %>%
set_top_border(row=1,col=everywhere) %>%
set_bottom_border(row=nrow(x_table),col=everywhere) %>%
set_number_format(2) %>%
set_caption("Population as a percentage of the total population for selected European countries in 2000") %>%
set_label("tab_foreignpop_2000")
# Export to LaTeX
x_table_tex = x_table %>%
add_footnote("\\textbf{Notes:} Author's calculations based on data \\citep{oecd2022foreign}") %>%
set_escape_contents(row = nrow(x_table)+1,col=everywhere, FALSE) %>%
set_number_format(row=nrow(x_table)+1,col=everywhere,0)
cat(to_latex(x_table_tex),file=here("output","tables","tab_foreignpop_2000.tex"))
# Export to Word
x_table_word = x_table %>%
add_footnote("Notes: Author's calculations based on data (OECD, 2022)") %>%
set_number_format(row=nrow(x_table)+1,col=everywhere,0)
x_table_word = as_flextable(x_table_word)
save_as_docx(x_table_word, path = here("output","tables","tab_foreignpop_2000.docx"))
renv::snapshot()
##############################################################
# Template MASTER file for data repository
# Ruben Dewitte
# Feburary 2022
##############################################################
# SETUP -------------------------------------------------------------------
# Load libraries
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("code","02_dataprep.R"))
# Analysis - Analyse the data ----------------------------------------------------------------
source(here("code","03_analysis.R"))
renv::snapshot()
